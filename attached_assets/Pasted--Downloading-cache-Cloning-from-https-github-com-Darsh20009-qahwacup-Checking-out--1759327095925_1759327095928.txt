==> Downloading cache...
==> Cloning from https://github.com/Darsh20009/qahwacup
==> Checking out commit dd68c7e1c33af4378284726af9fcc1e04bbbab0a in branch main
==> Transferred 231MB in 8s. Extraction took 4s.
==> Using Node.js version 22.16.0 (default)
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Running build command 'npm install; npm run build'...
up to date, audited 538 packages in 2s
67 packages are looking for funding
  run `npm fund` for details
10 vulnerabilities (3 low, 7 moderate)
To address issues that do not require attention, run:
  npm audit fix
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> npx vite build && npx esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.19 building for production...
transforming...
A PostCSS plugin did not pass the `from` option to `postcss.parse`. This may cause imported assets to be incorrectly transformed. If you've recently added a PostCSS plugin that raised this warning, please contact the package author to fix the issue.
âœ“ 3027 modules transformed.
rendering chunks...
[plugin:vite:reporter] [plugin vite:reporter] 
(!) /opt/render/project/src/node_modules/html2canvas/dist/html2canvas.esm.js is dynamically imported by /opt/render/project/src/client/src/lib/pdf-generator.ts, /opt/render/project/src/node_modules/jspdf/dist/jspdf.es.min.js but also statically imported by /opt/render/project/src/client/src/pages/my-card.tsx, dynamic import will not move module into another chunk.
computing gzip size...
../dist/public/index.html                              1.54 kB â”‚ gzip:   0.85 kB
../dist/public/assets/qahwa-cup-logo-DJFzRGmL.png  1,526.44 kB
../dist/public/assets/index-Dj-jwczx.css             139.67 kB â”‚ gzip:  20.59 kB
../dist/public/assets/purify.es-BFmuJLeH.js           21.93 kB â”‚ gzip:   8.62 kB
../dist/public/assets/index.es-BZv7-2w3.js           150.57 kB â”‚ gzip:  51.50 kB
../dist/public/assets/jspdf.es.min-C8OaY6B3.js       413.14 kB â”‚ gzip: 134.84 kB
../dist/public/assets/index-D7V9hivM.js              796.31 kB â”‚ gzip: 230.91 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 7.45s
  dist/index.js  56.1kb
âš¡ Done in 9ms
==> Uploading build...
==> Uploaded in 8.6s. Compression took 4.0s
==> Build successful ðŸŽ‰
==> Deploying...
==> Timed Out
==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys
